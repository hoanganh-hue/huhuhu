#!/usr/bin/env python3
"""
Script ki·ªÉm tra d·ªØ li·ªáu th·ª±c - kh√¥ng c√≥ mock data
"""

import os
import sys
import logging
from pathlib import Path

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def check_real_data():
    """Ki·ªÉm tra d·ªØ li·ªáu th·ª±c"""
    logger.info("üîç Ki·ªÉm tra d·ªØ li·ªáu th·ª±c...")
    
    # Ki·ªÉm tra environment variables
    mock_vars = ['USE_MOCK', 'MOCK_DATA', 'TEST_MODE']
    for var in mock_vars:
        if os.getenv(var):
            logger.error(f"‚ùå T√¨m th·∫•y bi·∫øn m√¥i tr∆∞·ªùng mock: {var}")
            return False
    
    # Ki·ªÉm tra file source data
    data_files = ['data.csv', 'input.xlsx', 'customers.csv']
    for file in data_files:
        if Path(file).exists():
            logger.info(f"‚úÖ T√¨m th·∫•y file d·ªØ li·ªáu: {file}")
            # TODO: Ki·ªÉm tra n·ªôi dung file kh√¥ng ch·ª©a dummy data
    
    # Ki·ªÉm tra code kh√¥ng c√≥ mock
    mock_keywords = ['mock', 'dummy', 'test_data', 'sample_data']
    for root, dirs, files in os.walk('src'):
        for file in files:
            if file.endswith('.py'):
                filepath = Path(root) / file
                try:
                    with open(filepath, 'r', encoding='utf-8') as f:
                        content = f.read().lower()
                        for keyword in mock_keywords:
                            if keyword in content:
                                logger.warning(f"‚ö†Ô∏è T√¨m th·∫•y t·ª´ kh√≥a mock trong {filepath}: {keyword}")
                except Exception as e:
                    logger.error(f"‚ùå L·ªói ƒë·ªçc file {filepath}: {e}")
    
    logger.info("‚úÖ Ki·ªÉm tra d·ªØ li·ªáu th·ª±c ho√†n th√†nh")
    return True

if __name__ == "__main__":
    success = check_real_data()
    sys.exit(0 if success else 1)
