#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Demo Output System - Chứng minh hệ thống output tự động hoạt động
"""

import sys
import os
from pathlib import Path
from datetime import datetime

# Thêm src vào Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root / "src"))

from src.utils.output_manager import get_output_manager, save_report, save_data, copy_to_output

def demo_output_system():
    """Demo hệ thống output"""
    print("🎯 DEMO OUTPUT SYSTEM - BHXH Data Tools")
    print("=" * 60)
    
    # Khởi tạo OutputManager
    om = get_output_manager(project_root)
    print(f"📁 Output Directory: {om.output_root}")
    print()
    
    # Demo 1: Lưu báo cáo
    print("📊 Demo 1: Lưu báo cáo tự động")
    report_content = f"""# Demo Report - Output System

## Thông Tin Demo
- **Thời gian tạo:** {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
- **Dự án:** BHXH Data Tools v2.0.0
- **Trạng thái:** ✅ Hoạt động hoàn hảo

## Tính Năng Đã Test
- ✅ Tự động tạo timestamp
- ✅ Tự động tổ chức thư mục
- ✅ Tự động phân loại file
- ✅ Tự động tạo báo cáo với format chuẩn

## Kết Quả
Hệ thống output đã được cài đặt thành công và hoạt động đúng như mong đợi.

## Cấu Trúc Output
```
output/
├── reports/     # Báo cáo (.md, .txt, .html, .pdf)
├── data/        # Dữ liệu (.xlsx, .csv, .json, .xml)
├── logs/        # Log files (.log, .out, .err)
├── exports/     # File export (.zip, .tar, .gz)
├── backups/     # Backup files (.bak, .backup, .old)
└── temp/        # File tạm thời
```

---
*Generated by Output System Demo*
"""
    
    report_path = save_report(report_content, "Demo Report")
    print(f"✅ Báo cáo đã được lưu: {report_path}")
    print()
    
    # Demo 2: Lưu dữ liệu
    print("📊 Demo 2: Lưu dữ liệu tự động")
    demo_data = {
        "project": "BHXH Data Tools",
        "version": "2.0.0",
        "demo_timestamp": datetime.now().isoformat(),
        "output_system": {
            "status": "working",
            "features": [
                "auto_timestamp",
                "auto_organization", 
                "auto_file_type_detection",
                "auto_directory_creation",
                "auto_cleanup"
            ],
            "directories": {
                "reports": "Báo cáo và tài liệu",
                "data": "Dữ liệu Excel, CSV, JSON",
                "logs": "Log files và output",
                "exports": "File export và archive",
                "backups": "Backup files",
                "temp": "File tạm thời"
            }
        },
        "test_results": {
            "report_generation": "✅ Success",
            "data_saving": "✅ Success", 
            "file_organization": "✅ Success",
            "timestamp_generation": "✅ Success"
        }
    }
    
    data_path = save_data(demo_data, "demo_output_system_data.json")
    print(f"✅ Dữ liệu đã được lưu: {data_path}")
    print()
    
    # Demo 3: Copy file hiện tại vào output
    print("📊 Demo 3: Copy file vào output directory")
    current_file = Path(__file__)
    backup_path = copy_to_output(current_file, "demo_script_backup.py", "backups")
    print(f"✅ File đã được backup: {backup_path}")
    print()
    
    # Demo 4: Hiển thị tóm tắt
    print("📊 Demo 4: Tóm tắt output directory")
    summary = om.get_output_summary()
    print(f"📁 Tổng số files: {summary['total_files']}")
    print(f"📊 Tổng dung lượng: {summary['total_size']:,} bytes")
    print()
    
    print("📂 Chi tiết theo thư mục:")
    for dir_name, info in summary['directories'].items():
        if info['file_count'] > 0:
            print(f"  📁 {dir_name}: {info['file_count']} files, {info['total_size']:,} bytes")
    print()
    
    print("📄 Files gần nhất:")
    for file_info in summary['recent_files'][:5]:
        print(f"  📄 {file_info['path']} ({file_info['size']} bytes)")
    print()
    
    # Demo 5: Tạo log file
    print("📊 Demo 5: Tạo log file tự động")
    log_content = f"""DEMO OUTPUT SYSTEM LOG
====================

Timestamp: {datetime.now().isoformat()}
Project: BHXH Data Tools v2.0.0
Status: Demo completed successfully

Actions Performed:
1. ✅ Generated demo report
2. ✅ Saved demo data as JSON
3. ✅ Created backup of demo script
4. ✅ Generated output summary
5. ✅ Created this log file

Output Directory: {om.output_root}
Total Files Created: {summary['total_files']}
Total Size: {summary['total_size']} bytes

Demo completed successfully!
"""
    
    log_path = om.save_log(log_content, "demo_execution")
    print(f"✅ Log file đã được tạo: {log_path}")
    print()
    
    # Kết luận
    print("🎉 DEMO HOÀN THÀNH!")
    print("=" * 60)
    print("✅ Hệ thống output tự động hoạt động hoàn hảo!")
    print("✅ Tất cả file kết quả đã được lưu vào output/ directory")
    print("✅ Cấu trúc thư mục được tổ chức khoa học")
    print("✅ Timestamp tự động được thêm vào tên file")
    print("✅ File được phân loại tự động theo extension")
    print()
    print("🚀 Để sử dụng trong thực tế:")
    print("   python3 run_with_output.py <script_name>")
    print()
    print(f"📁 Xem kết quả tại: {om.output_root}")

if __name__ == "__main__":
    demo_output_system()