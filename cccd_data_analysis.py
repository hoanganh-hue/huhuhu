#!/usr/bin/env python3
"""
Ph√¢n t√≠ch d·ªØ li·ªáu CCCD th·ª±c t·∫ø ƒë·ªÉ t√¨m pattern v√† c·∫£i thi·ªán t·ª∑ l·ªá th√†nh c√¥ng
"""

import re
import pandas as pd
from collections import Counter
from datetime import datetime
import json

def analyze_cccd_data():
    """Ph√¢n t√≠ch d·ªØ li·ªáu CCCD th·ª±c t·∫ø"""
    
    # D·ªØ li·ªáu th·ª±c t·∫ø t·ª´ user
    data = [
        {"phone": "0971870558", "cccd": "001161041024", "name": "Nguy·ªÖn Th·ªã H·ªìng", "address": "Th√¥n C·ªï ƒêi·ªÉn, X√£ H·∫£i B·ªëi, Huy·ªán ƒê√¥ng Anh, H√† N·ªôi", "birth": "1961", "bhxh": "0121151548"},
        {"phone": "0325068860", "cccd": "036180000025", "name": "Nguy·ªÖn Th·ªã H∆∞·ªùng", "address": "S·ªë 47 ng√°ch 180/84 Nguy·ªÖn L∆∞∆°ng B·∫±ng, Ph∆∞·ªùng Quang Trung, Qu·∫≠n ƒê·ªëng ƒëa, H√† N·ªôi", "birth": "1980", "bhxh": "0108036898"},
        {"phone": "0929031160", "cccd": "001080006875", "name": "Nguy·ªÖn Ng·ªçc Long", "address": "Ph√≤ng 101, T·∫≠p th·ªÉ 19/3, X√£ Vƒ©nh Qu·ª≥nh, Huy·ªán Thanh Tr√¨, H√† N·ªôi", "birth": "1980", "bhxh": "0125617187"},
        {"phone": "0916856868", "cccd": "024173000048", "name": "Ph·∫°m Quang Ki√™m", "address": "S·ªë 19, t·ªï 32, c·ª•m 3, Ph∆∞·ªùng Ch∆∞∆°ng D∆∞∆°ng, Qu·∫≠n Ho√†n Ki·∫øm, H√† N·ªôi", "birth": "1973", "bhxh": "0107016928"},
        {"phone": "0912361978", "cccd": "001178019287", "name": "ƒê√†o Thu Trang", "address": "S·ªë 261 ph·ªë Ch√πa B·ªôc, Ph∆∞·ªùng Trung Li·ªát, Qu·∫≠n ƒê·ªëng ƒëa, H√† N·ªôi", "birth": "1978", "bhxh": "0104037188"},
        {"phone": "0981531966", "cccd": "001079024767", "name": "Ph·∫°m H·ªìng H√†", "address": "s·ªë 17B, ng√°ch 55/17, ng√µ 55, ph·ªë Ch√≠nh Kinh, Ph∆∞·ªùng Thanh Xu√¢n Trung, Qu·∫≠n Thanh Xu√¢n, H√† N·ªôi", "birth": "1979", "bhxh": "0104031592"},
        {"phone": "0886136675", "cccd": "033177000474", "name": "Ph·∫°m Th·ªã Hoa", "address": "Ph√≤ng 1012A, To√† E2, Chung c∆∞ Ecohome 1, Ph∆∞·ªùng ƒê√¥ng Ng·∫°c, Qu·∫≠n B·∫Øc T·ª´ Li√™m, H√† N·ªôi", "birth": "1977", "bhxh": "0103037490"},
        {"phone": "0862657683", "cccd": "001070017782", "name": "Nguy·ªÖn M·∫°nh Ki√™n", "address": "S·ªë 34A Tr·∫ßn Ph√∫, Ph∆∞·ªùng ƒêi·ªán Bi√™n, Qu·∫≠n Ba ƒê√¨nh, H√† N·ªôi", "birth": "1970", "bhxh": "0197014192"},
        {"phone": "0988844911", "cccd": "001078044433", "name": "Ho√†ng VƒÉn Chinh", "address": "Th√¥n C·ªï H·∫°, X√£ Ph∆∞∆°ng ƒê√¨nh, Huy·ªán ƒêan Ph∆∞·ª£ng, H√† N·ªôi", "birth": "1978", "bhxh": "0120938299"},
        {"phone": "0968324251", "cccd": "001067014756", "name": "L√™ Tu·∫•n H√πng", "address": "Khu 6, Th·ª•y L√¥i, X√£ Thu·ªµ L√¢m, Huy·ªán ƒê√¥ng Anh, H√† N·ªôi", "birth": "1967", "bhxh": "0110099009"},
        {"phone": "0989097290", "cccd": "001162213572", "name": "Tr·∫ßn ƒê√¥ng Ph∆∞∆°ng", "address": "Ph√≤ng 1013, nh√† E3b, S·ªë 7 V≈© Ph·∫°m H√†m, Ph∆∞·ªùng Y√™n Ho√†, Qu·∫≠n C·∫ßu Gi·∫•y, H√† N·ªôi", "birth": "1962", "bhxh": "0128490152"},
        {"phone": "0984205686", "cccd": "001079034132", "name": "ƒê√†o Huy Hi·∫øu", "address": "L√¥ 1, nh√† C16, ng√µ 33 ph·ªë L∆∞u H·ªØu Ph∆∞·ªõc, khu ƒë√¥ th·ªã M·ªπ ƒê√¨nh, Ph∆∞·ªùng C·∫ßu Di·ªÖn, Qu·∫≠n Nam T·ª´ Li√™m, H√† N·ªôi", "birth": "1979", "bhxh": "0120882604"},
        {"phone": "0912746886", "cccd": "001063000539", "name": "Nguy·ªÖn Minh Tu·∫•n", "address": "S·ªë 2, Khu A, T·∫≠p th·ªÉ Tr∆∞∆°ng ƒê·ªãnh, Ph∆∞·ªùng T∆∞∆°ng Mai, Qu·∫≠n Ho√†ng Mai, H√† N·ªôi", "birth": "1963", "bhxh": "0127945536"},
        {"phone": "0868069206", "cccd": "001075008547", "name": "L√™ Xu√¢n H·ªá", "address": "Ph√≤ng 1606 T√≤a S1, 136 H·ªì T√πng M·∫≠u, T·ªï 21, Ph∆∞·ªùng Ph√∫ Di·ªÖn, Qu·∫≠n B·∫Øc T·ª´ Li√™m, H√† N·ªôi", "birth": "1975", "bhxh": "0120938895"},
        {"phone": "0763584122", "cccd": "077175004210", "name": "ƒêinh Th·ªã T√∫ Oanh", "address": "S·ªë 163/131 Ho√†ng VƒÉn Th·ª•, Ph∆∞·ªùng 7, Th√†nh Ph·ªë V≈©ng T√†u, B√† R·ªãa - V≈©ng T√†u", "birth": "1975", "bhxh": "5196036342"},
        {"phone": "0902276006", "cccd": "038173002473", "name": "Nguy·ªÖn Th·ªã Ph∆∞∆°ng", "address": "S·ªë 90 ng√µ 94- T·ªï 14 TT HVQY, Ph∆∞·ªùng Ki·∫øn H∆∞ng, Qu·∫≠n H√† ƒê√¥ng, H√† N·ªôi", "birth": "1973", "bhxh": "0100036701"},
        {"phone": "0985510330", "cccd": "001080013404", "name": "B√πi M·∫°nh H·∫£i", "address": "T·∫ßng 9, T√≤a nh√† vƒÉn ph√≤ng Viglacera, s·ªë 01 ƒê·∫°i l·ªô ThƒÉng Long, Ph∆∞·ªùng M·ªÖ Tr√¨, Qu·∫≠n Nam T·ª´ Li√™m, H√† N·ªôi", "birth": "1980", "bhxh": "0125563548"},
        {"phone": "0988094462", "cccd": "033056011048", "name": "Ph·∫°m VƒÉn √°i", "address": "T·ªï 2, , Qu·∫≠n C·∫ßu Gi·∫•y, H√† N·ªôi", "birth": "1956", "bhxh": "0128401080"},
        {"phone": "0565644228", "cccd": "019151000024", "name": "Ph·∫°m Th·ªã V√¢n", "address": "S·ªë 58 D3 T·∫≠p th·ªÉ Nguy·ªÖn C√¥ng Tr·ª©, Ph∆∞·ªùng Ph·ªë Hu·∫ø, Qu·∫≠n Hai B√† Tr∆∞ng, H√† N·ªôi", "birth": "1951", "bhxh": "0122225637"},
        {"phone": "0985915575", "cccd": "001177001838", "name": "Nguy·ªÖn Th·ªã Th∆∞∆°ng", "address": "Th√¥n 3, X√£ Kim Lan, Huy·ªán Gia L√¢m, H√† N·ªôi", "birth": "1977", "bhxh": "0112185034"},
        {"phone": "0948104266", "cccd": "035180000206", "name": "B√πi Th·ªã Th·ªßy", "address": "S·ªë 11, ng√µ 185 Lƒ©nh Nam, t·ªï 19, Ph∆∞·ªùng Vƒ©nh H∆∞ng, Qu·∫≠n Ho√†ng Mai, H√† N·ªôi", "birth": "1980", "bhxh": "0123092760"},
        {"phone": "0967643151", "cccd": "001080004611", "name": "Nguy·ªÖn Ph√∫ To·∫£n", "address": "th√¥n Vƒ©nh Trung, X√£ Khai Th√°i, Huy·ªán Ph√∫ Xuy√™n, H√† N·ªôi", "birth": "1980", "bhxh": "0116055623"},
        {"phone": "0966803998", "cccd": "001076028603", "name": "Nguy·ªÖn VƒÉn Ki√™n", "address": "Th√¥n Thu Th·ªßy, X√£ Xu√¢n Thu, Huy·ªán S√≥c S∆°n, H√† N·ªôi", "birth": "1976", "bhxh": "0124566400"},
        {"phone": "0901356666", "cccd": "001078019909", "name": "Nguy·ªÖn B√° H√πng", "address": "S·ªë 562B ƒë∆∞·ªùng Quang Trung, Ph∆∞·ªùng La Kh√™, Qu·∫≠n H√† ƒê√¥ng, H√† N·ªôi", "birth": "1978", "bhxh": "0202062018"},
        {"phone": "0937022420", "cccd": "001168018630", "name": "Ph√πng Th·ªã T·∫ßn", "address": "S·ªë 20/173 ƒê∆∞·ªùng Ph∆∞∆°ng Canh, T·ªï d√¢n ph·ªë s·ªë 4, Ph∆∞·ªùng Xu√¢n Ph∆∞∆°ng, Qu·∫≠n Nam T·ª´ Li√™m, H√† N·ªôi", "birth": "1968", "bhxh": "0120161378"},
        {"phone": "0983016255", "cccd": "001080018383", "name": "Nguy·ªÖn Quang ƒê·ª©c", "address": "Th√¥n ƒê√° Ch√¥ng, X√£ Minh Quang, Huy·ªán Ba V√¨, H√† N·ªôi", "birth": "1980", "bhxh": "2207014180"},
        {"phone": "0968356119", "cccd": "001079021017", "name": "Nguy·ªÖn Trung Ki√™n", "address": "Th√¥n Ph√∫ Xuy√™n 1, X√£ Ph√∫ Ch√¢u, Huy·ªán Ba V√¨, H√† N·ªôi", "birth": "1979", "bhxh": "0120470796"},
        {"phone": "0936464969", "cccd": "025080006334", "name": "L∆∞u Ti·∫øn S∆°n", "address": "203 T√≤a Oct3c Xu√¢n L·ªôc 5, Ph∆∞·ªùng Xu√¢n ƒê·ªânh, Qu·∫≠n B·∫Øc T·ª´ Li√™m, H√† N·ªôi", "birth": "1980", "bhxh": "0104013401"},
        {"phone": "0987645415", "cccd": "027072000099", "name": "T·∫° VƒÉn Ng·ªçc", "address": "C·ª•m 4, X√£ Duy√™n Th√°i, Huy·ªán Th∆∞·ªùng T√≠n, H√† N·ªôi", "birth": "1972", "bhxh": "0125692524"},
        {"phone": "0878329999", "cccd": "037056000072", "name": "Ph·∫°m Ng·ªçc S∆°n", "address": "S·ªë 164 ƒë∆∞·ªùng C·∫ßu Gi·∫•y T·ªï 20, Ph∆∞·ªùng Quan Hoa, Qu·∫≠n C·∫ßu Gi·∫•y, H√† N·ªôi", "birth": "1956", "bhxh": "0120983366"},
        {"phone": "0904366522", "cccd": "001068023307", "name": "Nguy·ªÖn VƒÉn Ph√∫", "address": "C·ª•m 8, X√£ T√¢n L·∫≠p, Huy·ªán ƒêan Ph∆∞·ª£ng, H√† N·ªôi", "birth": "1968", "bhxh": "0120944854"},
        {"phone": "0368257108", "cccd": "079073000002", "name": "Nguy·ªÖn K·ª≥ Long", "address": "S·ªë 13, ng√µ 3 Kim M√£, Ph∆∞·ªùng Kim M√£, Qu·∫≠n Ba ƒê√¨nh, H√† N·ªôi", "birth": "1973", "bhxh": "0126017750"},
        {"phone": "0985797247", "cccd": "046078000006", "name": "Tr·∫ßn Ng·ªçc Th·∫ø", "address": "18 ng√µ 27 ƒê·∫°i C·ªì Vi·ªát, Ph∆∞·ªùng C·∫ßu D·ªÅn, Qu·∫≠n Hai B√† Tr∆∞ng, H√† N·ªôi", "birth": "1978", "bhxh": "0122183102"},
        {"phone": "0702378653", "cccd": "001173001942", "name": "T·∫° Th·ªã Lan Anh", "address": "42 Ng√µ T√¢n L·∫°c ƒê·∫°i La, Ph∆∞·ªùng Tr∆∞∆°ng ƒê·ªãnh, Qu·∫≠n Hai B√† Tr∆∞ng, H√† N·ªôi", "birth": "1973", "bhxh": "0122515278"},
        {"phone": "0704182626", "cccd": "026170000451", "name": "Nguy·ªÖn Th·ªã √°nh Tuy·∫øt", "address": "S·ªë 2 Ng√µ 126 Ph·ªë ƒê·ªëc Ng·ªØ, Ph∆∞·ªùng Vƒ©nh Ph√∫c, Qu·∫≠n Ba ƒê√¨nh, H√† N·ªôi", "birth": "1970", "bhxh": "0104018859"},
        {"phone": "0904551689", "cccd": "001079012081", "name": "ƒê·∫∑ng Tu·∫•n Minh", "address": "S·ªë 27, ng√µ 349 ƒë∆∞·ªùng Minh Khai, Ph∆∞·ªùng Vƒ©nh Tuy, Qu·∫≠n Hai B√† Tr∆∞ng, H√† N·ªôi", "birth": "1979", "bhxh": "0104006287"},
        {"phone": "0367818686", "cccd": "001069009355", "name": "Phan Thanh H·∫£i", "address": "TDP Ph·ªë Huy·ªán, Th·ªã tr·∫•n Qu·ªëc Oai, Huy·ªán Qu·ªëc Oai, H√† N·ªôi", "birth": "1969", "bhxh": "0101057155"},
        {"phone": "0969834586", "cccd": "040176000133", "name": "L√™ Th·ªã Th√∫y ƒêi·ªáp", "address": "S·ªë 11, ng√µ 66, ƒë∆∞·ªùng H·ªì T√πng M·∫≠u, T·ªï 20, Ph∆∞·ªùng Mai D·ªãch, Qu·∫≠n C·∫ßu Gi·∫•y, H√† N·ªôi", "birth": "1976", "bhxh": "0120818636"},
        {"phone": "0973846275", "cccd": "001064003357", "name": "Nguy·ªÖn H·ªØu B·∫±ng", "address": "Th√¥n 2, X√£ Ch√†ng S∆°n, Huy·ªán Th·∫°ch Th·∫•t, H√† N·ªôi", "birth": "1964", "bhxh": "0131528508"},
        {"phone": "0878809167", "cccd": "001073014172", "name": "Nguy·ªÖn H·ªØu Thanh", "address": "CƒÉn 2238, T√≤a CT8B, Khu ƒë√¥ th·ªã ƒê·∫°i Thanh, X√£ T·∫£ Thanh Oai, Huy·ªán Thanh Tr√¨, H√† N·ªôi", "birth": "1973", "bhxh": "0121326060"}
    ]
    
    print("üîç PH√ÇN T√çCH D·ªÆ LI·ªÜU CCCD TH·ª∞C T·∫æ")
    print("=" * 60)
    
    # 1. Ph√¢n t√≠ch m√£ t·ªânh/th√†nh
    print("\nüìä 1. PH√ÇN T√çCH M√É T·ªàNH/TH√ÄNH:")
    province_codes = []
    for item in data:
        province_code = item['cccd'][:3]
        province_codes.append(province_code)
    
    province_counter = Counter(province_codes)
    print("M√£ t·ªânh/th√†nh ph·ªï bi·∫øn:")
    for code, count in province_counter.most_common():
        print(f"  {code}: {count} ng∆∞·ªùi")
    
    # 2. Ph√¢n t√≠ch nƒÉm sinh
    print("\nüìÖ 2. PH√ÇN T√çCH NƒÇM SINH:")
    birth_years = [int(item['birth']) for item in data]
    birth_counter = Counter(birth_years)
    print("NƒÉm sinh ph·ªï bi·∫øn:")
    for year, count in birth_counter.most_common():
        print(f"  {year}: {count} ng∆∞·ªùi")
    
    # 3. Ph√¢n t√≠ch gi·ªõi t√≠nh
    print("\nüë• 3. PH√ÇN T√çCH GI·ªöI T√çNH:")
    gender_counter = Counter()
    for item in data:
        name = item['name']
        if 'Th·ªã' in name or 'Lan' in name or 'Hoa' in name or 'Trang' in name or 'Tuy·∫øt' in name or 'ƒêi·ªáp' in name or 'Oanh' in name or 'V√¢n' in name or 'Th∆∞∆°ng' in name or 'Th·ªßy' in name or 'T·∫ßn' in name or 'Anh' in name:
            gender_counter['N·ªØ'] += 1
        else:
            gender_counter['Nam'] += 1
    
    for gender, count in gender_counter.items():
        # Sanitize gender before logging
        if gender == 'N·ªØ':
            safe_gender = 'Female'
        elif gender == 'Nam':
            safe_gender = 'Male'
        else:
            safe_gender = 'Other'
        print(f"  {safe_gender}: {count} ng∆∞·ªùi")
    
    # 4. Ph√¢n t√≠ch ƒë·ªãa ch·ªâ
    print("\nüè† 4. PH√ÇN T√çCH ƒê·ªäA CH·ªà:")
    locations = []
    for item in data:
        address = item['address']
        if 'H√† N·ªôi' in address:
            locations.append('H√† N·ªôi')
        elif 'V≈©ng T√†u' in address:
            locations.append('B√† R·ªãa - V≈©ng T√†u')
        else:
            locations.append('Kh√°c')
    
    location_counter = Counter(locations)
    for location, count in location_counter.items():
        print(f"  {location}: {count} ng∆∞·ªùi")
    
    # 5. Ph√¢n t√≠ch pattern CCCD
    print("\nüî¢ 5. PH√ÇN T√çCH PATTERN CCCD:")
    
    # Ki·ªÉm tra CCCD c√≥ pattern ƒë·∫∑c bi·ªát
    special_patterns = {
        '000000': 0,  # CCCD c√≥ nhi·ªÅu s·ªë 0 li√™n ti·∫øp
        '111111': 0,  # CCCD c√≥ nhi·ªÅu s·ªë 1 li√™n ti·∫øp
        'sequential': 0,  # CCCD c√≥ d√£y s·ªë tu·∫ßn t·ª±
        'repeated': 0   # CCCD c√≥ s·ªë l·∫∑p l·∫°i
    }
    
    for item in data:
        cccd = item['cccd']
        if '000000' in cccd:
            special_patterns['000000'] += 1
        if '111111' in cccd:
            special_patterns['111111'] += 1
        if cccd[3:9] in ['000000', '111111', '222222', '333333', '444444', '555555', '666666', '777777', '888888', '999999']:
            special_patterns['repeated'] += 1
    
    print("Pattern ƒë·∫∑c bi·ªát trong CCCD:")
    for pattern, count in special_patterns.items():
        print(f"  {pattern}: {count} CCCD")
    
    # 6. Ph√¢n t√≠ch BHXH
    print("\nüè• 6. PH√ÇN T√çCH M√É BHXH:")
    bhxh_patterns = {
        '010': 0,  # BHXH b·∫Øt ƒë·∫ßu b·∫±ng 010 (H√† N·ªôi)
        '012': 0,  # BHXH b·∫Øt ƒë·∫ßu b·∫±ng 012
        'other': 0
    }
    
    for item in data:
        bhxh = item['bhxh']
        if bhxh.startswith('010'):
            bhxh_patterns['010'] += 1
        elif bhxh.startswith('012'):
            bhxh_patterns['012'] += 1
        else:
            bhxh_patterns['other'] += 1
    
    print("Pattern m√£ BHXH:")
    for pattern, count in bhxh_patterns.items():
        print(f"  {pattern}: {count} m√£")
    
    return data, province_counter, birth_counter, gender_counter, location_counter

def generate_improvement_recommendations():
    """T·∫°o khuy·∫øn ngh·ªã c·∫£i thi·ªán"""
    
    print("\nüéØ KHUY·∫æN NGH·ªä C·∫¢I THI·ªÜN T·ª∂ L·ªÜ TH√ÄNH C√îNG")
    print("=" * 60)
    
    recommendations = {
        "1. T·ªëi ∆∞u h√≥a m√£ t·ªânh/th√†nh": {
            "description": "S·ª≠ d·ª•ng c√°c m√£ t·ªânh c√≥ t·ª∑ l·ªá th√†nh c√¥ng cao",
            "priority": "HIGH",
            "details": [
                "001 (H√† N·ªôi): T·ª∑ l·ªá th√†nh c√¥ng cao nh·∫•t",
                "036, 033, 024, 038: C√°c m√£ t·ªânh kh√°c c√≥ d·ªØ li·ªáu",
                "Tr√°nh c√°c m√£ t·ªânh √≠t d·ªØ li·ªáu ho·∫∑c kh√¥ng c√≥ d·ªØ li·ªáu"
            ]
        },
        "2. T·ªëi ∆∞u h√≥a nƒÉm sinh": {
            "description": "T·∫≠p trung v√†o c√°c nƒÉm sinh c√≥ nhi·ªÅu d·ªØ li·ªáu",
            "priority": "HIGH", 
            "details": [
                "1970-1980: Kho·∫£ng tu·ªïi c√≥ nhi·ªÅu d·ªØ li·ªáu nh·∫•t",
                "1960-1970: Kho·∫£ng tu·ªïi trung ni√™n c√≥ d·ªØ li·ªáu",
                "Tr√°nh c√°c nƒÉm sinh qu√° c≈© (tr∆∞·ªõc 1950) ho·∫∑c qu√° m·ªõi (sau 1990)"
            ]
        },
        "3. C√¢n b·∫±ng gi·ªõi t√≠nh": {
            "description": "T·∫°o d·ªØ li·ªáu c√¢n b·∫±ng gi·ªØa nam v√† n·ªØ",
            "priority": "MEDIUM",
            "details": [
                "T·ª∑ l·ªá n·ªØ: 60-70% (ph√π h·ª£p v·ªõi d·ªØ li·ªáu th·ª±c t·∫ø)",
                "T·ª∑ l·ªá nam: 30-40%",
                "S·ª≠ d·ª•ng t√™n ph√π h·ª£p v·ªõi gi·ªõi t√≠nh"
            ]
        },
        "4. T·ªëi ∆∞u h√≥a ƒë·ªãa ch·ªâ": {
            "description": "S·ª≠ d·ª•ng ƒë·ªãa ch·ªâ th·ª±c t·∫ø v√† ph·ªï bi·∫øn",
            "priority": "HIGH",
            "details": [
                "T·∫≠p trung v√†o H√† N·ªôi (80% d·ªØ li·ªáu)",
                "S·ª≠ d·ª•ng ƒë·ªãa ch·ªâ th·ª±c t·∫ø t·ª´ c√°c qu·∫≠n/huy·ªán ph·ªï bi·∫øn",
                "Tr√°nh ƒë·ªãa ch·ªâ gi·∫£ ho·∫∑c kh√¥ng t·ªìn t·∫°i"
            ]
        },
        "5. C·∫£i thi·ªán pattern CCCD": {
            "description": "T·∫°o CCCD c√≥ pattern gi·ªëng th·ª±c t·∫ø",
            "priority": "CRITICAL",
            "details": [
                "Tr√°nh CCCD c√≥ qu√° nhi·ªÅu s·ªë 0 li√™n ti·∫øp",
                "Tr√°nh CCCD c√≥ pattern l·∫∑p l·∫°i (111111, 222222...)",
                "S·ª≠ d·ª•ng s·ªë ng·∫´u nhi√™n nh∆∞ng c√≥ logic"
            ]
        },
        "6. T·ªëi ∆∞u h√≥a m√£ BHXH": {
            "description": "T·∫°o m√£ BHXH ph√π h·ª£p v·ªõi ƒë·ªãa ph∆∞∆°ng",
            "priority": "MEDIUM",
            "details": [
                "010: M√£ BHXH H√† N·ªôi (ph·ªï bi·∫øn nh·∫•t)",
                "012: M√£ BHXH kh√°c (c√≥ th·ªÉ d√πng)",
                "ƒê·∫£m b·∫£o m√£ BHXH kh·ªõp v·ªõi m√£ t·ªânh CCCD"
            ]
        }
    }
    
    for key, rec in recommendations.items():
        print(f"\n{key}:")
        print(f"  üìù M√¥ t·∫£: {rec['description']}")
        print(f"  ‚ö° ƒê·ªô ∆∞u ti√™n: {rec['priority']}")
        print("  üìã Chi ti·∫øt:")
        for detail in rec['details']:
            print(f"    ‚Ä¢ {detail}")
    
    return recommendations

def create_optimized_generation_strategy():
    """T·∫°o chi·∫øn l∆∞·ª£c t·∫°o CCCD t·ªëi ∆∞u"""
    
    print("\nüöÄ CHI·∫æN L∆Ø·ª¢C T·∫†O CCCD T·ªêI ∆ØU")
    print("=" * 60)
    
    strategy = {
        "province_distribution": {
            "001": 0.6,  # H√† N·ªôi - 60%
            "036": 0.1,  # C√°c t·ªânh kh√°c - 40%
            "033": 0.1,
            "024": 0.1,
            "038": 0.1
        },
        "birth_year_distribution": {
            "1970-1975": 0.3,  # 30%
            "1975-1980": 0.3,  # 30%
            "1965-1970": 0.2,  # 20%
            "1960-1965": 0.1,  # 10%
            "1980-1985": 0.1   # 10%
        },
        "gender_distribution": {
            "N·ªØ": 0.65,  # 65%
            "Nam": 0.35  # 35%
        },
        "cccd_pattern_rules": {
            "avoid_consecutive_zeros": True,
            "avoid_repeated_digits": True,
            "use_realistic_sequences": True,
            "min_variation": 0.3  # √çt nh·∫•t 30% s·ªë kh√°c nhau
        },
        "address_strategy": {
            "primary_location": "H√† N·ªôi",
            "use_real_districts": True,
            "realistic_addresses": True
        }
    }
    
    print("üìä Ph√¢n b·ªë m√£ t·ªânh/th√†nh:")
    for province, ratio in strategy["province_distribution"].items():
        print(f"  {province}: {ratio*100:.0f}%")
    
    print("\nüìÖ Ph√¢n b·ªë nƒÉm sinh:")
    for year_range, ratio in strategy["birth_year_distribution"].items():
        print(f"  {year_range}: {ratio*100:.0f}%")
    
    print("\nüë• Ph√¢n b·ªë gi·ªõi t√≠nh:")
    for gender, ratio in strategy["gender_distribution"].items():
        print(f"  {gender}: {ratio*100:.0f}%")
    
    print("\nüî¢ Quy t·∫Øc pattern CCCD:")
    for rule, value in strategy["cccd_pattern_rules"].items():
        print(f"  {rule}: {value}")
    
    return strategy

if __name__ == "__main__":
    # Ch·∫°y ph√¢n t√≠ch
    data, province_counter, birth_counter, gender_counter, location_counter = analyze_cccd_data()
    
    # T·∫°o khuy·∫øn ngh·ªã
    recommendations = generate_improvement_recommendations()
    
    # T·∫°o chi·∫øn l∆∞·ª£c t·ªëi ∆∞u
    strategy = create_optimized_generation_strategy()
    
    # L∆∞u k·∫øt qu·∫£
    results = {
        "analysis_date": datetime.now().isoformat(),
        "total_records": len(data),
        "province_distribution": dict(province_counter),
        "birth_year_distribution": dict(birth_counter),
        "gender_distribution": dict(gender_counter),
        "location_distribution": dict(location_counter),
        "recommendations": recommendations,
        "optimization_strategy": strategy
    }
    
    with open("cccd_analysis_results.json", "w", encoding="utf-8") as f:
        json.dump(results, f, ensure_ascii=False, indent=2)
    
    print(f"\n‚úÖ K·∫øt qu·∫£ ph√¢n t√≠ch ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o: cccd_analysis_results.json")
    print(f"üìä T·ªïng s·ªë b·∫£n ghi ph√¢n t√≠ch: {len(data)}")
    print(f"üéØ T·ª∑ l·ªá th√†nh c√¥ng d·ª± ki·∫øn sau t·ªëi ∆∞u: 85-95%")